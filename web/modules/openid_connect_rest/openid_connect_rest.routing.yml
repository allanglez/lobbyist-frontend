# Administration
entity.state_token.list:
  path: 'admin/config/services/openid-connect-rest/state-tokens'
  defaults:
    _entity_list: state_token
    _title: 'State tokens (for REST API)'
  requirements:
    _permission: 'administer openid connect rest'
  options:
    _admin_route: TRUE

entity.state_token.delete_form:
  path: 'admin/config/services/openid-connect-rest/state-tokens/{state_token}/delete'
  defaults:
    _entity_form: state_token.delete
    _title: 'Delete state token'
  requirements:
    _permission: 'administer openid connect rest'
  options:
    _admin_route: TRUE

entity.authorization_mapping.list:
  path: 'admin/config/services/openid-connect-rest/authorization-mappings'
  defaults:
    _entity_list: authorization_mapping
    _title: 'Authorization mappings (for REST API)'
  requirements:
    _permission: 'administer openid connect rest'
  options:
    _admin_route: TRUE

entity.authorization_mapping.delete_form:
  path: 'admin/config/services/openid-connect-rest/authorization-mappings/{authorization_mapping}/delete'
  defaults:
    _entity_form: authorization_mapping.delete
    _title: 'Delete authorization mapping'
  requirements:
    _permission: 'administer openid connect rest'
  options:
    _admin_route: TRUE
# Provider callback (overrides the old one)
openid_connect_rest.api.authenticate:
  path: '/openid-connect/rest/{client_name}'
  defaults:
    _controller: '\Drupal\openid_connect_rest\Controller\ApiController::authenticate'
    _title: 'OpenID Connect REST authentication'
  methods: [GET]
  requirements:
    _custom_access: '\Drupal\openid_connect_rest\Controller\ApiController::canAccessAuthenticate'
# REST API
openid_connect_rest.api.token:
  path: '/openid-connect/rest/oauth/token/{provider_id}'
  defaults: { _controller: '\Drupal\openid_connect_rest\Controller\ApiController::getToken' }
  methods: [POST]
  requirements:
    _custom_access: '\Drupal\openid_connect_rest\Controller\ApiController::canAccessGetToken'

openid_connect_rest.api.provider_ids:
  path: '/openid-connect/rest/provider-ids'
  defaults: { _controller: '\Drupal\openid_connect_rest\Controller\ApiController::getProviderIds' }
  methods: [GET]
  requirements:
    _permission: 'openid connect rest api provider ids access'

openid_connect_rest.api.authorization_endpoint:
  path: '/openid-connect/rest/authorization-endpoint/{provider_id}'
  defaults: { _controller: '\Drupal\openid_connect_rest\Controller\ApiController::getAuthorizationEndpoint' }
  methods: [GET]
  requirements:
    _permission: 'openid connect rest api provider authorization endpoint access'
