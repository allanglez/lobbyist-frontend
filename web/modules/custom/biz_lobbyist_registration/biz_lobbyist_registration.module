<?php
	

use Drupal\Core\Url;
use Symfony\Component\HttpFoundation\RedirectResponse;
/**
 * Implements hook_local_tasks_alter().
 */
function biz_lobbyist_registration_local_tasks_alter(&$local_tasks) {
  unset($local_tasks['user.register']);
}


/**
 * Implements hook_menu_local_tasks_alter().
 * Change the title from tabs in registration page
 */
function biz_lobbyist_registration_menu_local_tasks_alter(&$data, $route_name) {
  $forms = ["user.login", "multiple_registration.role_registration_page","user.pass"];
  if(in_array($route_name, $forms)){
    $new_tab['#link']['title'] = t("I Don't know");
  	$new_tab['#link']['url'] = Drupal\Core\Url::fromUri('internal:/form/lobbyist-finder-modal');
  	$new_tab['#theme'] = "menu_local_task";
  	$new_tab['#active'] = FALSE;
  	$new_tab['#access'] = $data['tabs'][0]['multiple_registration.local_tasks:in_house_lobbyist']['#access'];
  	$data['tabs'][0]['multiple_registration.local_tasks:modal_lobbyist'] = $new_tab;
  	foreach ($data['tabs'][0] as $type => &$tab) {
        if ($tab['#link']['title'] == t('Create new In-house lobbyist account')) {
            $tab['#link']['title'] = t('Register as In-house lobbyist');
        }
        if ($tab['#link']['title'] == t('Create new Consultant lobbyist account')) {
            $tab['#link']['title'] = t('Register as Consultant lobbyist');
        }
        if ($tab['#link']['title'] == t('Reset your password')) {
            $tab['#link']['title'] = t('Forgot your password?');
        }
        if ($tab['#link']['title'] == t("I Don't know")) {
	        $tab['#link']['localized_options']['attributes']['class'][] = 'webform-dialog button';
	        $tab['#link']['localized_options']['attributes']['data-dialog-options'][] = '{"width":650,"height":500}';
        }
        unset($tab);
    }
  }
}

//-----------------  MILESTONE 2----------------------------
/**
 * Implements hook_form_alter().
 *  The actions are change only for validate and save the information in another server
 */
function biz_lobbyist_registration_form_alter(&$form, $form_state, $form_id) {
  if($form_id == "user_register_form"){
    unset($form['actions']['submit']['#submit'][0]);
    unset($form['actions']['submit']['#submit'][1]);
    $form['actions']['submit']['#submit'][] = 'biz_lobbyist_registration_submitForm';
    $form['#validate'][] = 'biz_lobbyist_registration_validate_email';
  } 
}

/**
 * Validate if the email address is already taken 
 */
function biz_lobbyist_registration_validate_email($form, &$form_state){
  $email = $form_state->getValue('mail');
  $url = \Drupal::config('biz_lobbyist_registration.settings')->get('validate_email_url_api'). $email;

  $response = biz_lobbyist_registration_execute_api($url, [], "GET", []);
  $data = json_decode($response["message"]);
  if(!empty($data)){
    $form_state->setErrorByName('email', t("The email address ".$email." is already taken."));
  }
  //Save User
  $user_values = $form_state->getValues();
  $mail = array("value" => $user_values["mail"]);
  $name = array("value" => $user_values["name"]);
  $status = array("value" => $user_values["status"]);
  $pass = array("value" => $user_values["pass"]);
  $user_values["mail"] = $mail;
  $user_values["name"] = $name;
  $user_values["status"] = $status;
  $user_values["pass"] = $pass;
  unset($user_values["administer_users"]);
  unset($user_values["notify"]);
  unset($user_values["preferred_langcode"]);
  unset($user_values["preferred_admin_langcode"]);
  unset($user_values["submit"]);
  unset($user_values["form_build_id"]);
  unset($user_values["form_token"]);
  unset($user_values["form_id"]);
  unset($user_values["contact"]);
  unset($user_values["multiple_registration_rid"]);
  unset($user_values["rid"]);
  unset($user_values["timezone"]);
  unset($user_values["op"]);
  $headers =  array('X-CSRF-Token' => "E6US4LWopfdmir8ugJftXOAbjW7brbr1eaZ2IcQRrwo", "Content-Type" =>"application/json");
  foreach($user_values as $key => $value){
    if(is_array($value) && isset($value['address'])){
      $address = $value['address'];
      unset($user_values[$key]);
      $user_values[$key] = $address;
    }
  }
  $url = \Drupal::config('biz_lobbyist_registration.settings')->get('registration_url_api');
  $response = biz_lobbyist_registration_execute_api($url ,$user_values, "POST",  $headers );
  $data = json_decode($response["message"]);
  $user_name = "";
  if($response["code"] != 201){
    $form_state->setErrorByName('ApiError', t($response["message"]));
  }
  else{

    $user = [];
    $user['uid'] = $data->uid[0]->value;
    $user['name'] = $data->name[0]->value;
    $user['mail'] = $data->mail[0]->value;

    $account = entity_create('user', $user);
    
    _user_mail_notify('register_no_approval_required', $account, $data->langcode[0]->value);  
  }

}
/**
 * Execute the api
 */
function biz_lobbyist_registration_execute_api($url, $data = array(), $method, $headers = array() ) {
  //Creating a httpClient Object.
  $client = \Drupal::httpClient();
  try {
    $request_options = [];
    if(!empty($headers)){
      $request_options =  array('headers' => $headers);   
    }
    if(!empty($data)){
      $request_options['json'] = $data;
    }
    $response = $client->$method($url, $request_options);
    return ["code" => $response->getStatusCode(), "message" => $response->getBody()->getContents()];
  }
  catch (\Exception $e) {
   if ($e->hasResponse()) {
      $response = $e->getResponse()->getBody()->getContents();
      return ["code" => 400, "message" => $response];
    }
  }
}
/**
 * If the account was created redirect to basic page
 */
function biz_lobbyist_registration_submitForm(&$form, $form_state) {
  $user_values = $form_state->getValues();
  $field_first_name = $form_state->getValue('field_first_name');
  $field_first_name = $field_first_name[0]["value"];
  $field_last_name = $form_state->getValue('field_last_name');
  $field_last_name = $field_last_name[0]["value"];
  $field_first_name_consultant_ = $form_state->getValue('field_first_name_consultant_');
  $field_first_name_consultant_ = $field_first_name_consultant_[0]["value"];
  $field_last_name_consultant_ = $form_state->getValue('field_last_name_consultant_');
  $field_last_name_consultant_ = $field_last_name_consultant_[0]["value"];  
  $user_name = "";
  if(!empty($field_first_name) && !empty($field_last_name)){
    $user_name = $field_first_name . " ". $field_last_name;
  }elseif(!empty($field_first_name_consultant_) && !empty($field_last_name_consultant_)){
    $user_name = $field_first_name_consultant_ . " ". $field_last_name_consultant_;
  }
  
  
  
  biz_lobbyist_registration_goto("account-register?name=". strtoupper($user_name));
}

function biz_lobbyist_registration_preprocess_page_title(&$variables) {
  $node = \Drupal::request()->attributes->get('node');
  $name = isset($_GET['name']) ? ", " . $_GET['name'] : "";
  if ($node && $node->bundle() == 'page' && !empty($name)) {
    $variables['title'] = t($node->getTitle(). $name);
  }
}

function biz_lobbyist_registration_goto($path) { 
  $response = new RedirectResponse($path);
  $response->send();
  return;
}