<?php
    
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Database\Database;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\JsonResponse;
use Drupal\biz_webforms\BizWebformController;
use Drupal\biz_block_plugin\Controller\GeneralFunctions;

function entityHasChanged($entity) {
    $changed_fields = [];
    if (!$entity->original) {
      return $changed_fields;
    }
    $field_names = getFieldList($entity->bundle(), $entity->getEntityTypeId());
    foreach($field_names as $key => $field_name) {
      if($entity->hasField($field_name) && $field_name != 'field_comments' && !$entity->get($field_name)->equals($entity->original->get($field_name))){
        $changed_fields[$field_name] = $entity->get($field_name)->getValue();
      }
    }
    return $changed_fields;
}

  /**
   * Get list of field names from bundle
   * @param  string $bundle Bundle name
   * @return array         Array of field names
   */
function getFieldList($bundle, $entity_type_id) {
    $fields_by_weight = [];
    $bundle_fields = \Drupal::entityTypeManager()
      ->getStorage('entity_view_display')
      ->load($entity_type_id . '.' . $bundle . '.' . 'default')
      ->getComponents();
    
    foreach ($bundle_fields as $name => $options) {
      $fields_by_weight[] = $name;
    }
    return $fields_by_weight;
}

function splitByCommaIntoArray($string) {
    $array = explode(",", $string);
    $array = array_map('trim', $array);
    return $array;
}
function checkboxesValues($string){
  $array = explode(",", $string);
  $new_array = [];
  foreach($array as $id => $value){
    $new_array[$value] = $value;
  }
  return $new_array;
}

function biz_webforms_webform_submission_form_alter(array &$form, FormStateInterface $form_state, $form_id) {
    switch ($form_id) {
 
        case "webform_submission_add_an_in_house_lobbyust_to_your_node_9_add_form":
            $url = \Drupal::config('biz_lobbyist_registration.settings')->get('base_url') . \Drupal::config('biz_lobbyist_registration.settings')->get('json_path') . \Drupal::currentUser()->getEmail();
            $response = BizWebformController::get_endpoint($url, [], "GET", []);
            $data = json_decode($response["message"])[0];
            $form["elements"]["update_organization_action"]["#text"] ='<div class="organization info-organization two-columns-orange-header">'
            .   '<div class="col-xs-6 no-padding">'
            .     '<p><strong>Organization</strong></p>'
            .   '</div>'
            .   '<div class="col-xs-6 no-padding update-action">'
            .     '<a class="update-action" href="/user/' . \Drupal::currentUser()->id() . '/edit">Edit organization</a>'
            .   '</div>'
            . '</div>';
            
            //$form["elements"]["update_organization_action"] = ['class' => 'table-purple-header general-lobbyist-tables'];
            //kint($form["elements"]["update_organization_action"]);
            //$form["elements"]["update_organization_action"]["attributes"] = ["class" => "table-purple-header general-lobbyist-tables"];
            
            $form["elements"]["organization_header"]["#text"] = '<div class="header-view gray-info-container">'
            .    '<div class="header-row no-padding row col-xs-12">'
            .      '<div class="field col no-padding align-self-start col-xs-4">'
            .        '<p class="field-title">' . 'Legal organization' . '</p>' 
            .        '<p>' . $data->field_legal_organization . '</p>'
            .      '</div>'
            .      '<div class="field col no-padding align-self-start col-xs-4">'
            .        '<p class="field-title">' . 'Operating organization' . '</p> '
            .        '<p>' . $data->field_operating_organization . '</p>'
            .      '</div>'
            .      '<div class="field col no-padding align-self-start col-xs-4">'
            .        '<p class="field-title"></p>'
            .        '<p></p>'
            .      '</div>'
            .    '</div>'
            .    '<div class="header-row no-padding row col-xs-12">'
            .      '<div class="field col no-padding align-self-start col-xs-4">'
            .        '<p class="field-title">' . 'Address' . '</p> '
            .        '<p>' . $data->field_street_address_address_line1 . '</p>'
            .      '</div>'
            .      '<div class="field col no-padding align-self-start col-xs-4">'
            .        '<p class="field-title">' . 'City or town' . '</p> '
            .        '<p>' . $data->field_street_address_locality . '</p>'
            .      '</div>'
            .      '<div class="field col no-padding align-self-start col-xs-4">'
            .        '<p class="field-title">' . 'Country' . '</p> '
            .        '<p>' . $data->field_street_address_country_code . '</p>'
            .      '</div>'
            .    '</div>'
            .  '</div>';
            break;
        case "webform_submission_add_an_in_house_lobbyist_to_your_node_20_add_form":
            $form['actions']['submit']['#submit'] = ['::submitForm', 'biz_webforms_patching'];
            break;
        case "webform_submission_add_a_lobbying_activity_edit_node_18_add_form":
            
            $form['actions']['submit']['#submit'] = ['::submitForm', 'biz_webforms_patching'];
            $email = \Drupal::currentUser()->getEmail();
            $lobbyist_endpoind = \Drupal::config('biz_block_plugin.settings')->get('in_house_lobbying_list');
            $activities_response = GeneralFunctions::getAllData($lobbyist_endpoind);
            $rows_response = json_decode($activities_response['message']);
            $options = [];
            foreach($rows_response as $id => $user){
                $options [$user->sid] = $user->name ;
            }
            $topics_id = \Drupal::request()->query->get('which_topic_do_you_want_to_lobby_government_about_');
            $form['elements']['which_topic_do_you_want_to_lobby_government_about_']['#default_value'] = splitByCommaIntoArray($topics_id);
            
            $whom_id = \Drupal::request()->query->get('who_are_you_lobbying_or_plan_to_lobby_');
            $form['elements']['who_are_you_lobbying_or_plan_to_lobby_']['#default_value'] = splitByCommaIntoArray($whom_id);
            
            $how_do_you_want_to_lobby_ = \Drupal::request()->query->get('how_do_you_want_to_lobby_');
            $form['elements']['how_do_you_want_to_lobby_']['#default_value'] = splitByCommaIntoArray($how_do_you_want_to_lobby_);
            
  
            $form['elements']['in_house_lobbyist']['#options'] = $options;
            break;
        //Create a new activity (in-house and consultant)
       // case "webform_submission_add_a_lobbying_activity_node_8_add_form":
/*
        case "webform_submission_add_a_lobbying_activity_consulta_node_10_add_form":  
            $arr_options = array();
            $taxo = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadTree("lobbyist_s_portfolios");

            foreach ($taxo as $key => $item) {
	            if ($item->parents[0]) { $arr_options["categories"][] = $item->parents[0]; }
            }
            
            foreach($taxo as $key_taxo => $item_taxo) {
// 	            if($item_taxo->name) {
	                if(in_array($item_taxo->tid, $arr_options["categories"]) && !array_key_exists([$item_taxo->name], $return_taxo)) { 
	                    $return_taxo[$item_taxo->name] = array();
	                    $arr_options["categories"][$item_taxo->tid]['name'] = $item_taxo->name;
		            } else {
			            $key = $arr_options["categories"][$item_taxo->parents[0]]['name'];
		                $return_taxo[$key][] = $item_taxo->name;
		            }    
// 		        }
            }
            
              
//             $form['elements']['who_are_you_lobbying_or_plan_to_lobby_']['#options'] = $return_taxo;
//             $form['actions']['submit']['#submit'] = ['::submitForm','biz_webforms_post' ];
            break;
*/
        case "webform_submission_add_a_lobbying_activity_consedit_node_21_add_form":

            $form['actions']['submit']['#submit'] = ['::submitForm', 'biz_webforms_patching'];
            $topics_id = \Drupal::request()->query->get('which_topic_do_you_want_to_lobby_government_about_');
            $form['elements']['which_topic_do_you_want_to_lobby_government_about_']['#default_value'] = splitByCommaIntoArray($topics_id);
            
            $whom_id = \Drupal::request()->query->get('who_are_you_lobbying_or_plan_to_lobby_');
            $form['elements']['who_are_you_lobbying_or_plan_to_lobby_']['#default_value'] = splitByCommaIntoArray($whom_id);
            
            $how_do_you_want_to_lobby_ = \Drupal::request()->query->get('how_do_you_want_to_lobby_');
            $form['elements']['how_do_you_want_to_lobby_']['#default_value'] = splitByCommaIntoArray($how_do_you_want_to_lobby_);

            
            $form['elements']['custom_address']['#default_value']['address_line1'] = \Drupal::request()->query->get('address_line1');
            $form['elements']['custom_address']['#default_value']['locality'] = \Drupal::request()->query->get('locality');
            $form['elements']['custom_address']['#default_value']['postal_code'] = \Drupal::request()->query->get('postal_code');
            $form['elements']['custom_address']['#default_value']['administrative_area'] = \Drupal::request()->query->get('administrative_area');
            break;
        case "webform_submission_modal_confirmation_add_form":
            $form['actions']['submit']['#submit'] = ['biz_webforms_delete_user_confirmed'];
            break;
        default:
            break;
    }
}

function biz_webforms_delete_user_confirmed(&$form, FormStateInterface $form_state) {
    $submission_id = \Drupal::request()->query->get('id');
    $webform_id = \Drupal::request()->query->get('webform_id');
    $base_url = \Drupal::config('biz_lobbyist_registration.settings')->get('base_url');
    $url = $base_url . 'webform_rest/' . $webform_id . '/submission/' . $submission_id;
    $data = ['deleted' => true];
    BizWebformController::patch_endpoint($url, $data);
    BizWebformController::biz_lobbyist_registration_user_login(\Drupal::currentUser());
/*
    $response = new \Drupal\Core\Ajax\AjaxResponse();
    $response->addCommand(new \Drupal\Core\Ajax\CloseDialogCommand());
    return $response;
*/
    
}

function biz_webforms_patching(&$form, FormStateInterface $form_state) {
    $current_user = \Drupal::currentUser();

    $submission_id = \Drupal::request()->query->get('sid');
    $webform_id = \Drupal::request()->query->get('webform_id');

    $base_url = \Drupal::config('biz_lobbyist_registration.settings')->get('base_url');
    $url = $base_url . 'webform_rest/' . $webform_id . '/submission/' . $submission_id;
    $data = $form_state->getValues();  
    
    //Updated user id 
    $email = $current_user->getEmail();
    $base_url = \Drupal::config('biz_lobbyist_registration.settings')->get('base_url');
    $enpoint = \Drupal::config('biz_lobbyist_registration.settings')->get('json_path');
    $url_user = $base_url .$enpoint . \Drupal::currentUser()->getEmail();
    $user = BizWebformController::get_endpoint($url_user, [], "GET", []);
    if($user['code'] !== 400){
      $user = isset(json_decode($user['message'])[0]) ? json_decode($user['message'])[0] : [];
      \Drupal::logger('biz_webforms_patching__')->notice(json_encode($user->uid));
      $data['uid']= $user->uid;
    }
    \Drupal::logger('biz_webforms_patching__')->notice(json_encode($data));
    BizWebformController::patch_endpoint($url, $data);
    BizWebformController::biz_lobbyist_registration_user_login(\Drupal::currentUser());
}

function biz_webforms_post(&$form, FormStateInterface $form_state) {
    $base_url = \Drupal::config('biz_lobbyist_registration.settings')->get('base_url');
    $url = $base_url . 'webform_rest/submit';
    $data = $form_state->getValues();
    $response = \Drupal::httpClient()->get(($base_url . '/rest/session/token'));
    $csrf = (string) $response->getBody();
    $headers =  array('X-CSRF-Token' => $csrf, "Content-Type" =>"application/json");
    $test = BizWebformController::get_endpoint($url, $data, 'POST', $headers);
    BizWebformController::biz_lobbyist_registration_user_login(\Drupal::currentUser());
}

function biz_webforms_entity_presave(Drupal\Core\Entity\EntityInterface $entity) {
    if ($entity->getEntityType()->id() == 'user') {
        $email = $entity->getEmail();
        $changed_fields = entityHasChanged($entity);

        BizWebformController::createConnection();
        $connection = Database::getConnection();
        
        
       
/*
        $base_url = \Drupal::config('biz_lobbyist_registration.settings')->get('base_url');
        $enpoint = \Drupal::config('biz_lobbyist_registration.settings')->get('json_path');
        $url = $base_url .$enpoint . \Drupal::currentUser()->getEmail();
        $user = BizWebformController::get_endpoint($url, [], "GET", []);
*/


        
        $user_table = "users_field_data";
        $email_field = "mail";
        $password_field = "pass";
        $user_data = $connection->select($user_table, 'u');
/*
        kint($user_data);
        die();
*/
        $user_data->fields('u', array('uid', 'pass'));
        $user_data->condition($email_field, $email);
        $user_result = $user_data->execute()->fetchObject();

        $url = \Drupal::config('biz_lobbyist_registration.settings')->get('base_url');
        BizWebformController::patch_endpoint(($url . 'user/' . $user_result->uid), $changed_fields);
    }
}